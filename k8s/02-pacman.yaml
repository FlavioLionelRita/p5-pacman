kind: ConfigMap
apiVersion: v1
metadata:
  name: pacman-config
  namespace: games
  labels:
    app.kubernetes.io/name: pacman-config
    app.kubernetes.io/instance: pacman-config
    app.kubernetes.io/version: '20201212'
    app.kubernetes.io/component: pacman
    app.kubernetes.io/part-of: games
    # app.kubernetes.io/managed-by: blazedpath
    enviroment: dev
    tier: backend
data:
  APP_HOST: http://localhost
  APP_PORT: '8000'
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: pacman
  namespace: games
  labels:
    app.kubernetes.io/name: pacman
    app.kubernetes.io/instance: pacman
    app.kubernetes.io/version: '20201212'
    app.kubernetes.io/component: pacman
    app.kubernetes.io/part-of: games
    # app.kubernetes.io/managed-by: blazedpath
    enviroment: dev
    tier: frontend
  annotations:
    # prometheus.io/scrape: 'true'
    # prometheus.io/path: /metrics
    # prometheus.io/port: '8000'
    kubernetes.io/change-cause: '20201212'
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: pacman
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pacman
        app.kubernetes.io/instance: pacman
        app.kubernetes.io/version: '20201212'
        app.kubernetes.io/component: pacman
        app.kubernetes.io/part-of: games
        # app.kubernetes.io/managed-by: blazedpath
        enviroment: dev
        tier: frontend
      annotations:
        # prometheus.io/scrape: 'true'
        # prometheus.io/path: /metrics
        # prometheus.io/port: '8080'
        kubernetes.io/change-cause: '20201212'
    spec:
      containers:
        - name: pacman
          image: 'registry.gitlab.com/flaviolrita/p5-pacman:0.0.4'
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          envFrom:
          - configMapRef:
              name: pacman-config  
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 120
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          resources:
            requests:
              cpu: 250m
              memory: 500Mi
            limits:
              cpu: 250m
              memory: 500Mi
      serviceAccountName: games
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate    
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: pacman
  namespace: games
  labels:
    app.kubernetes.io/name: pacman
    app.kubernetes.io/instance: pacman
    app.kubernetes.io/version: '20201212'
    app.kubernetes.io/component: pacman
    app.kubernetes.io/part-of: games
    # app.kubernetes.io/managed-by: blazedpath
    enviroment: dev
    tier: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pacman
  minReplicas: 2
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 75
--- 
kind: Service
apiVersion: v1
metadata:
  name: pacman
  namespace: games
  labels:
    app.kubernetes.io/name: pacman
    app.kubernetes.io/instance: pacman
    app.kubernetes.io/version: '20201212'
    app.kubernetes.io/component: pacman
    app.kubernetes.io/part-of: games
    # app.kubernetes.io/managed-by: blazedpath
    enviroment: dev
    tier: frontend
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: pacman
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 30008
      protocol: TCP
      name: pacman

# kind: Service
# apiVersion: v1
# metadata:
#   name: pacman
#   namespace: games
#   labels:
#     app.kubernetes.io/name: pacman
#     app.kubernetes.io/instance: pacman
#     app.kubernetes.io/version: '20201212'
#     app.kubernetes.io/component: pacman
#     app.kubernetes.io/part-of: games
#     # app.kubernetes.io/managed-by: blazedpath
#     enviroment: dev
#     tier: frontend
# spec:
#   type: ClusterIP
#   selector:
#     app.kubernetes.io/name: pacman
#   ports:
#     - port: 8000
#       targetPort: 8000
#       protocol: TCP
#       name: pacman
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: pacman
#   namespace: games
#   labels:
#     app.kubernetes.io/name: pacman
#     app.kubernetes.io/instance: pacman
#     app.kubernetes.io/version: '20201212'
#     app.kubernetes.io/component: pacman
#     app.kubernetes.io/part-of: games
#     # app.kubernetes.io/managed-by: blazedpath
#     enviroment: dev
#     tier: frontend
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     # cert-manager.io/cluster-issuer: letsencrypt-prod
#     # nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
#     # nginx.ingress.kubernetes.io/limit-connections: '20480'
#     # nginx.ingress.kubernetes.io/limit-rpm: '300'
#     # nginx.ingress.kubernetes.io/limit-burst-multiplier: '600'
# spec:
#   # tls:
#   #   - hosts:
#   #       - pacman.192.168.1.152.nip.io
#   #     secretName: dev-blazedpath-com-tls
#   rules:
#     - host: pacman.192.168.1.152.nip.io
#       http:
#         paths:
#           - backend:
#               serviceName: pacman
#               servicePort: 8000  